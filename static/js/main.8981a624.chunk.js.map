{"version":3,"sources":["Redux/selectors.js","Redux/sortSlice.js","Redux/singleUserSlice.js","Redux/paginationSlice.js","components/Table/Table.js","Redux/filterSlice.js","components/Form/Form.js","Redux/selectSlice.js","components/Select/Select.js","Redux/usersSlice.js","components/UserInfo/UserInfo.js","components/Pagination/Pagination.js","App.js","Redux/operations.js","Redux/index.js","index.js"],"names":["usersSelector","state","users","filterSelector","filter","sortSelector","sort","sortReversSelector","reverse","currentPageSelector","pagination","currentPage","getVisibleUsers","createSelector","select","filterResult","firstName","toLowerCase","includes","adress","a","b","id","localeCompare","lastName","email","phone","console","log","getStates","states","map","user","push","getUser","userId","find","Number","sortSlice","createSlice","name","initialState","reducers","editSort","payload","actions","reducer","singleUserSlice","editUser","action","paginationSlice","perPage","pages","editPage","editPages","editCurrentPage","editPagination","Table","dispatch","useDispatch","filtered","useSelector","perPageSelector","sortBy","sortRevers","useEffect","Math","ceil","length","onClick","e","target","getAttribute","data","className","parentElement","slice","uuidv4","filterSlice","editFilter","Form","filterValue","type","value","onChange","filterInputValue","selectSlice","editSelect","Select","contactSlice","setUsers","UserInfo","currentUser","city","streetAddress","zip","loremIpsum","avgSentencesPerParagraph","Pagination","getPages","pagesSelector","pageNumber","i","disabled","number","App","axios","get","result","rootreducer","combineReducers","usersSlice","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8981a624.chunk.js","sourcesContent":["import { createSelector } from \"reselect\";\r\n\r\nexport const usersSelector = (state) => state.users;\r\nexport const filterSelector = (state) => state.filter;\r\nexport const selectSelector = (state) => state.select;\r\nexport const sortSelector = (state) => state.sort.sort;\r\nexport const sortReversSelector = (state) => state.sort.reverse;\r\nexport const userSelector = (state) => state.userId;\r\nexport const perPageSelector = (state) => state.pagination.perPage;\r\nexport const currentPageSelector = (state) => state.pagination.currentPage;\r\nexport const pagesSelector = (state) => state.pagination.pages;\r\n\r\n\r\nexport const getVisibleUsers = createSelector(\r\n  [usersSelector, filterSelector, selectSelector, sortSelector, sortReversSelector],\r\n  (users, filter, select, sort, reverse) => {\r\n    let filterResult = [...users];\r\n    if (filter) {\r\n      filterResult = filterResult.filter((users) =>\r\n        users.firstName.toLowerCase().includes(filter.toLowerCase())\r\n      );\r\n    }\r\n    if (select) {\r\n      filterResult = filterResult.filter((users) =>\r\n        users.adress.state.toLowerCase().includes(select.toLowerCase())\r\n      );\r\n    }\r\n    if (sort) {\r\n      switch (sort) {\r\n        case \"id\":\r\n          filterResult = filterResult.sort((a, b) => a.id - b.id)\r\n          break;\r\n        case \"firstName\":\r\n          filterResult = filterResult.sort((a, b) => a.firstName.localeCompare(b.firstName))\r\n          break;\r\n        case \"lastName\":\r\n          filterResult = filterResult.sort((a, b) => a.lastName.localeCompare(b.lastName))\r\n          break;\r\n        case \"email\":\r\n          filterResult = filterResult.sort((a, b) => a.email.localeCompare(b.email))\r\n          break;\r\n        case \"phone\":\r\n          filterResult = filterResult.sort((a, b) => a.phone.localeCompare(b.phone))\r\n          break;\r\n        case \"state\":\r\n          filterResult = filterResult.sort((a, b) => a.adress.state.localeCompare(b.adress.state))\r\n          break;\r\n\r\n        default:\r\n          console.log('Invalid subscription type');\r\n      }\r\n      if(reverse){\r\n        filterResult = filterResult.reverse();\r\n      }\r\n    }\r\n    return filterResult;\r\n  }\r\n);\r\n\r\nexport const getStates = createSelector([usersSelector], (users) => {\r\n  const states = [];\r\n  (() => {\r\n    users.map((user) => {\r\n      return states.includes(user.adress.state)\r\n        ? null\r\n        : states.push(user.adress.state);\r\n    });\r\n  })();\r\n  return states;\r\n});\r\n\r\nexport const getUser = createSelector([usersSelector, userSelector], (users, userId) => {\r\n  return users.find(user => user.id === Number(userId));\r\n})","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst sortSlice = createSlice({\r\n  name: \"sort\",\r\n  initialState: {\r\n    sort: \"\",\r\n    reverse: false,\r\n  },\r\n  reducers: {\r\n    editSort(state, { payload }) {\r\n      return state.sort === payload\r\n        ? { ...state, reverse: !state.reverse }\r\n        : { sort: payload, reverse:false };\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = sortSlice;\r\n\r\nexport const { editSort } = actions;\r\nexport default reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst singleUserSlice = createSlice({\r\n  name: \"userId\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    editUser(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst {actions, reducer} = singleUserSlice;\r\n\r\nexport const {editUser} = actions;\r\nexport default reducer","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst paginationSlice = createSlice({\r\n  name: \"pagination\",\r\n  initialState: {\r\n      perPage:20,\r\n      pages:1,\r\n      currentPage:1,\r\n  },\r\n  reducers: {\r\n    editPage(state, action) {\r\n      return {...state, currentPage:action.payload};\r\n    },\r\n    editPages(state, {payload}) {\r\n        return {...state, pages:payload}\r\n    },\r\n    editCurrentPage(state, {payload}) {\r\n      return {...state, currentPage:payload}\r\n  }\r\n  },\r\n});\r\n\r\nconst {actions, reducer} = paginationSlice;\r\n\r\nexport const {editPagination, editPages, editCurrentPage} = actions;\r\nexport default reducer","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getVisibleUsers,\r\n  perPageSelector,\r\n  currentPageSelector,\r\n  sortSelector,\r\n  sortReversSelector,\r\n} from \"../../Redux/selectors\";\r\nimport { editSort } from \"../../Redux/sortSlice\";\r\nimport { editUser } from \"../../Redux/singleUserSlice\";\r\nimport { editPages } from \"../../Redux/paginationSlice\";\r\n\r\nconst Table = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  let filtered = useSelector((state) => getVisibleUsers(state));\r\n  const perPage = useSelector((state) => perPageSelector(state));\r\n  const currentPage = useSelector((state) => currentPageSelector(state));\r\n  let sortBy = useSelector((state) => sortSelector(state));\r\n  let sortRevers = useSelector((state) => sortReversSelector(state));\r\n\r\n  useEffect(() => {\r\n    dispatch(editPages(Math.ceil(filtered.length / perPage)));\r\n  }, [dispatch, filtered.length, perPage]);\r\n\r\n  return (\r\n    <table>\r\n      <thead onClick={(e) => dispatch(editSort(e.target.getAttribute(\"data\")))}>\r\n        <tr>\r\n          <th\r\n            data=\"id\"\r\n            className={\r\n              sortBy === \"id\" && sortRevers === false\r\n                ? \"column-heading-down\"\r\n                : \"column-heading-up\"\r\n            }\r\n          >\r\n            id\r\n          </th>\r\n          <th\r\n            data=\"firstName\"\r\n            className={\r\n              sortBy === \"firstName\" && sortRevers === false\r\n                ? \"column-heading-down\"\r\n                : \"column-heading-up\"\r\n            }\r\n          >\r\n            First name\r\n          </th>\r\n          <th\r\n            data=\"lastName\"\r\n            className={\r\n              sortBy === \"lastName\" && sortRevers === false\r\n                ? \"column-heading-down\"\r\n                : \"column-heading-up\"\r\n            }\r\n          >\r\n            Last name\r\n          </th>\r\n          <th\r\n            data=\"email\"\r\n            className={\r\n              sortBy === \"email\" && sortRevers === false\r\n                ? \"column-heading-down\"\r\n                : \"column-heading-up\"\r\n            }\r\n          >\r\n            Email\r\n          </th>\r\n          <th\r\n            data=\"phone\"\r\n            className={\r\n              sortBy === \"phone\" && sortRevers === false\r\n                ? \"column-heading-down\"\r\n                : \"column-heading-up\"\r\n            }\r\n          >\r\n            Phone\r\n          </th>\r\n          <th\r\n            data=\"state\"\r\n            className={\r\n              sortBy === \"state\" && sortRevers === false\r\n                ? \"column-heading-down\"\r\n                : \"column-heading-up\"\r\n            }\r\n          >\r\n            State\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody\r\n        onClick={(e) =>\r\n          dispatch(editUser(e.target.parentElement.getAttribute(\"data\")))\r\n        }\r\n      >\r\n        {filtered\r\n          .slice(0 + 20 * (currentPage - 1), 20 * currentPage)\r\n          .map(({ id, firstName, lastName, phone, email, adress }) => {\r\n            return (\r\n              <tr key={uuidv4()} data={id}>\r\n                <td>{id}</td>\r\n                <td>{firstName}</td>\r\n                <td>{lastName}</td>\r\n                <td>{email}</td>\r\n                <td>{phone}</td>\r\n                <td>{adress.state}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst filterSlice = createSlice({\r\n  name: \"filter\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    editFilter(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst {actions, reducer} = filterSlice;\r\n\r\nexport const {editFilter} = actions;\r\nexport default reducer","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { filterSelector, currentPageSelector } from \"../../Redux/selectors\";\r\nimport { editFilter } from \"../../Redux/filterSlice\";\r\nimport { editCurrentPage } from \"../../Redux/paginationSlice\";\r\n\r\nconst Form = () => {\r\n  const filterValue = useSelector((state) => filterSelector(state));\r\n  const currentPage = useSelector((state) => currentPageSelector(state));\r\n  const dispatch = useDispatch();\r\n\r\n  const inputHandler = (e) => {\r\n    const filterInputValue = e.target.value;\r\n    dispatch(editFilter(filterInputValue));\r\n    if (currentPage !== 1) {\r\n      dispatch(editCurrentPage(1));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"filter-wrapper\">\r\n        <input\r\n          className=\"filter-input\"\r\n          type=\"text\"\r\n          value={filterValue}\r\n          onChange={inputHandler}\r\n        />\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst selectSlice = createSlice({\r\n  name: \"select\",\r\n  initialState: \"\",\r\n  reducers: {\r\n    editSelect(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst {actions, reducer} = selectSlice;\r\n\r\nexport const {editSelect} = actions;\r\nexport default reducer","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getStates } from \"../../Redux/selectors\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { editSelect } from \"../../Redux/selectSlice\";\r\nimport { editCurrentPage } from \"../../Redux/paginationSlice\";\r\n\r\n\r\nconst Select = () => {\r\n  const states = useSelector((state) => getStates(state));\r\n  const dispatch = useDispatch()\r\n\r\n  return (\r\n    <div>\r\n      <select name=\"state\" id=\"state\" onChange={e => (dispatch(editSelect(e.target.value), dispatch(editCurrentPage(1))))}>\r\n        <option value=\"\">Filter by state</option>\r\n        {states.map(state => <option key={uuidv4()} value={state}>{state}</option>)}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst contactSlice = createSlice({\r\n  name: \"users\",\r\n  initialState: [],\r\n  reducers: {\r\n    setUsers(state, action) {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { actions, reducer } = contactSlice;\r\n\r\nexport const { setUsers } = actions;\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport { loremIpsum } from 'react-lorem-ipsum';\r\n\r\nconst UserInfo = (currentUser) => {\r\n    const {firstName, lastName, adress} = currentUser.user;\r\n    const {city, state, streetAddress, zip} = adress;\r\n  return (\r\n    <>\r\n      <p>Selected profile: {firstName} {lastName}</p>\r\n      <p>Description: {loremIpsum({avgSentencesPerParagraph: 1})}</p>\r\n      <p>Adress: {streetAddress}</p>\r\n      <p>City: {city}</p>\r\n      <p>State:{state}</p>\r\n      <p>Index: {zip}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserInfo;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { pagesSelector, currentPageSelector } from \"../../Redux/selectors\";\r\nimport { editCurrentPage } from \"../../Redux/paginationSlice\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Pagination = () => {\r\n  const dispatch = useDispatch();\r\n  const getPages = useSelector((state) => pagesSelector(state));\r\n  const currentPage = useSelector((state) => currentPageSelector(state));\r\n  const pageNumber = [];\r\n  for (let i = 1; i <= getPages; i++) {\r\n    pageNumber.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"pagination-wrapper\">\r\n      <button\r\n        className=\"arrows\"\r\n        disabled={currentPage === 1 ? true : false}\r\n        onClick={() => dispatch(editCurrentPage(currentPage - 1))}\r\n      >\r\n        Previos\r\n      </button>\r\n      <div\r\n        onClick={(e) =>\r\n          dispatch(editCurrentPage(Number(e.target.getAttribute(\"data\"))))\r\n        }\r\n      >\r\n        {pageNumber.map((number) => (\r\n          <button\r\n            disabled={currentPage === number ? true : false}\r\n            key={uuidv4()}\r\n            data={number}\r\n          >\r\n            {number}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button\r\n        className=\"arrows\"\r\n        disabled={currentPage === pageNumber.length ? true : false}\r\n        onClick={() => dispatch(editCurrentPage(currentPage + 1))}\r\n      >\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import { useEffect } from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table/Table\";\nimport Form from \"./components/Form/Form\";\nimport Select from \"./components/Select/Select\";\nimport { useDispatch } from \"react-redux\";\nimport { getUsersOperation } from \"./Redux/operations\";\nimport UserInfo from \"./components/UserInfo/UserInfo\";\nimport { getUser } from \"./Redux/selectors\";\nimport { useSelector } from \"react-redux\";\nimport Pagination from \"./components/Pagination/Pagination\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const currentUser = useSelector((state) => getUser(state));\n\n  useEffect(() => {\n    dispatch(getUsersOperation());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"inputs-wrapper\">\n        <Form />\n        <Select />\n      </div>\n      <Table className=\"table\" />\n      <Pagination/>\n      <div className=\"profile-wrapper\">\n        <p>Profile info:</p>\n        {currentUser && <UserInfo user={currentUser} className=\"usersInfo\"/>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\nimport { setUsers } from \"./usersSlice\";\r\n\r\nexport const getUsersOperation = () => async (dispatch) => {\r\n  try {\r\n    const result = await axios.get(\r\n      \"https://itrex-react-lab-files.s3.eu-central-1.amazonaws.com/react-test-api.json\"\r\n    );\r\n    dispatch(setUsers(result.data))\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {combineReducers, configureStore} from '@reduxjs/toolkit'\r\nimport usersSlice from './usersSlice';\r\nimport filterSlice from './filterSlice';\r\nimport selectSlice from './selectSlice';\r\nimport sortSlice from './sortSlice';\r\nimport singleUserSlice from './singleUserSlice';\r\nimport paginationSlice from './paginationSlice';\r\n\r\n\r\n\r\n\r\nconst rootreducer = combineReducers({\r\n    users: usersSlice,\r\n    filter: filterSlice,\r\n    select: selectSlice,\r\n    sort: sortSlice,\r\n    userId: singleUserSlice,\r\n    pagination: paginationSlice,\r\n});\r\n\r\nexport const store = configureStore({\r\n    reducer: rootreducer\r\n})","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport {store} from \"./Redux/index\";\nimport 'normalize.css';\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}